name: Instagram Bot

# 添加权限限制
permissions:
  actions: none  # 禁止访问 Actions
  checks: none   # 禁止访问检查
  contents: read # 只读代码库内容
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

on:
  push:
    branches:
      - main  # 主分支代码推送时触发
  repository_dispatch:
    types: [trigger-bot]  # 添加 repository_dispatch 触发器
  workflow_dispatch:  # 允许手动触发

jobs:
  run-bot:
    runs-on: ubuntu-latest
    
    env:
      INSTAGRAM_USERNAME: ${{ secrets.INSTAGRAM_USERNAME }}
      INSTAGRAM_PASSWORD: ${{ secrets.INSTAGRAM_PASSWORD }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_API_BASE: ${{ secrets.OPENAI_API_BASE }}
      LINGYI_API_KEY: ${{ secrets.LINGYI_API_KEY }}
      LINGYI_API_BASE: ${{ secrets.LINGYI_API_BASE }}
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      FIREBASE_CREDENTIALS_BASE64: ${{ secrets.FIREBASE_CREDENTIALS_BASE64 }}
      FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}

    steps:
    - name: Checkout code
      run: |
        git clone https://github.com/chiang881/instaBOT.git . > /dev/null 2>&1
        git checkout ${{ github.sha }} > /dev/null 2>&1
        
    - name: Install Python
      run: |
        {
          sudo apt update
          sudo apt install -y python3 python3-pip
        } > /dev/null 2>&1
        
    - name: Install dependencies
      run: |
        {
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt
        } > /dev/null 2>&1
        
    - name: Run bot
      run: |
        # 将日志重定向到文件而不是控制台
        python3 bot.py > bot.log 2>&1
        # 只输出关键状态信息
        echo "Bot is running..."
      
    - name: Log trigger info
      if: github.event_name == 'repository_dispatch'
      run: |
        {
          echo "Bot triggered from device"
          echo "Process completed"
        } > /dev/null 2>&1 