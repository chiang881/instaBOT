name: Instagram Bot

# 添加权限限制
permissions:
  actions: none  # 禁止访问 Actions
  checks: none   # 禁止访问检查
  contents: read # 只读代码库内容
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

on:
  repository_dispatch:
    types: [trigger-bot]  # 添加 repository_dispatch 触发器
  workflow_dispatch:  # 允许手动触发

jobs:
  run-bot:
    runs-on: ubuntu-latest
    
    env:
      LOG_LEVEL: ERROR  # 设置日志级别为 ERROR，隐藏 INFO 日志
      HIDE_CHAT_CONTENT: "true"  # 设置为 true 以隐藏对话内容
      INSTAGRAM_USERNAME: ${{ secrets.INSTAGRAM_USERNAME }}
      INSTAGRAM_PASSWORD: ${{ secrets.INSTAGRAM_PASSWORD }}
      INSTAGRAM_SESSION: ${{ secrets.INSTAGRAM_SESSION }}  # 添加 Instagram 会话变量
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_API_BASE: ${{ secrets.OPENAI_API_BASE }}
      LINGYI_API_KEY: ${{ secrets.LINGYI_API_KEY }}
      LINGYI_API_BASE: ${{ secrets.LINGYI_API_BASE }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      FIREBASE_CREDENTIALS_BASE64: ${{ secrets.FIREBASE_CREDENTIALS_BASE64 }}
      FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
      CHAT_HISTORY_KEY: ${{ secrets.CHAT_HISTORY_KEY }}  # 添加聊天历史加密密钥
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}  # 添加通用加密密钥

    steps:
    - name: Checkout code
      run: |
        git clone https://github.com/chiang881/instaBOT.git .
        git checkout ${{ github.sha }}
        
    - name: Install Python
      run: |
        sudo apt update
        sudo apt install -y python3 python3-pip
        
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install -r requirements.txt
        
    - name: Run bot
      run: |
        python3 bot.py
      
    - name: Log trigger info
      if: github.event_name == 'repository_dispatch'
      run: |
        echo "Bot triggered from device:"
        echo "=== 基本信息 ==="
        echo "IP: ${{ github.event.client_payload.device_info.ip }}"
        echo "User Agent: ${{ github.event.client_payload.device_info.userAgent }}"
        echo "Platform: ${{ github.event.client_payload.device_info.platform }}"
        echo "Language: ${{ github.event.client_payload.device_info.language }}"
        
        echo "=== 地理位置信息 ==="
        echo "Country: ${{ github.event.client_payload.device_info.country }}"
        echo "City: ${{ github.event.client_payload.device_info.city }}"
        echo "Region: ${{ github.event.client_payload.device_info.region }}"
        echo "Region Code: ${{ github.event.client_payload.device_info.regionCode }}"
        echo "Continent: ${{ github.event.client_payload.device_info.continent }}"
        echo "Latitude: ${{ github.event.client_payload.device_info.latitude }}"
        echo "Longitude: ${{ github.event.client_payload.device_info.longitude }}"
        echo "Postal Code: ${{ github.event.client_payload.device_info.postalCode }}"
        echo "Timezone: ${{ github.event.client_payload.device_info.timezone }}"
        
        echo "=== 网络信息 ==="
        echo "ASN: ${{ github.event.client_payload.device_info.asn }}"
        echo "ASN Organization: ${{ github.event.client_payload.device_info.asOrganization }}"
        echo "HTTP Protocol: ${{ github.event.client_payload.device_info.httpProtocol }}"
        echo "TLS Version: ${{ github.event.client_payload.device_info.tlsVersion }}"
        echo "TLS Cipher: ${{ github.event.client_payload.device_info.tlsCipher }}"
        
        echo "=== 请求信息 ==="
        echo "CF Ray: ${{ github.event.client_payload.device_info.ray }}"
        echo "Client Trust Score: ${{ github.event.client_payload.device_info.clientTrustScore }}"
        echo "Browser Type: ${{ github.event.client_payload.device_info.browserType }}"
        echo "Colo: ${{ github.event.client_payload.device_info.colo }}"
        
        echo "=== 时间信息 ==="
        echo "Timestamp: ${{ github.event.client_payload.device_info.timestamp }}" 